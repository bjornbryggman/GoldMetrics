"""empty message

Revision ID: 1d008be67c76
Revises:
Create Date: 2025-02-24 14:27:19.533473

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1d008be67c76"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exchange",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("operatingmic", sa.String(), nullable=False),
        sa.Column("country", sa.String(), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("countryiso2", sa.String(), nullable=False),
        sa.Column("countryiso3", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "tickers",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("country", sa.String(), nullable=False),
        sa.Column("exchange", sa.String(), nullable=False),
        sa.Column("currency", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(["exchange"], ["exchange.code"]),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_index(op.f("ix_tickers_exchange"), "tickers", ["exchange"], unique=False)
    op.create_table(
        "historical_data",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column("open", sa.Float(), nullable=False),
        sa.Column("high", sa.Float(), nullable=False),
        sa.Column("low", sa.Float(), nullable=False),
        sa.Column("close", sa.Float(), nullable=False),
        sa.Column("adjusted_close", sa.Float(), nullable=False),
        sa.Column("volume", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(["code"], ["tickers.code"]),
        sa.PrimaryKeyConstraint("code", "date"),
    )
    op.create_index("ix_historical_data_date", "historical_data", [sa.text("date DESC")], unique=False)
    op.create_table(
        "technical_data",
        sa.Column("code", sa.String(), nullable=False),
        sa.Column("MarketCapitalization", sa.Integer(), nullable=False),
        sa.Column("Beta", sa.Float(), nullable=False),
        sa.Column("ema_50d", sa.Float(), nullable=False),
        sa.Column("ema_200d", sa.Float(), nullable=False),
        sa.Column("hi_250d", sa.Float(), nullable=False),
        sa.Column("low_250d", sa.Float(), nullable=False),
        sa.Column("prev_close", sa.Float(), nullable=False),
        sa.Column("change", sa.Float(), nullable=False),
        sa.Column("change_p", sa.Float(), nullable=False),
        sa.Column("avgvol_14d", sa.Float(), nullable=False),
        sa.Column("avgvol_50d", sa.Float(), nullable=False),
        sa.Column("avgvol_200d", sa.Float(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.Column("modified_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(["code"], ["tickers.code"]),
        sa.PrimaryKeyConstraint("code"),
    )
    # Convert the 'historical_data' table into a hypertable
    conn = op.get_bind()
    conn.execute(
        sa.text(
            """
            SELECT create_hypertable(
                'historical_data',
                by_range('date', INTERVAL '1d'),
                if_not_exists => TRUE,
                create_default_indexes => FALSE
            );
            """
        )
    )
    # Enable compression
    conn.execute(
        sa.text(
            """
            ALTER TABLE historical_data
            SET (
                timescaledb.compress,
                timescaledb.compress_segmentby='code',
                timescaledb.compress_orderby='date'
            );
            """
        )
    )
    # Add compression policy
    conn.execute(sa.text("SELECT add_compression_policy('historical_data', INTERVAL '1d');"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("technical_data")
    op.drop_index("ix_historical_data_date", table_name="historical_data")
    op.drop_table("historical_data")
    op.drop_index(op.f("ix_tickers_exchange"), table_name="tickers")
    op.drop_table("tickers")
    op.drop_table("exchange")
    # ### end Alembic commands ###
